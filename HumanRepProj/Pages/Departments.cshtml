@page
@model DepartmentsModel
@{
    ViewData["Title"] = "Departments - HRIS";
    Layout = "_Layout";
}

@section Styles {
    <style>
        /* Main Layout */
        .content-wrapper {
            padding: 20px;
            min-height: calc(100vh - 60px);
        }

        /* Page Header */
        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            padding-bottom: 15px;
            border-bottom: 1px solid #e0e0e0;
        }

        .page-title {
            font-size: 28px;
            font-weight: 600;
            color: #333;
            margin: 0;
            transition: color 0.2s ease;
        }

        .page-title:hover {
            color: #0d6efd;
            cursor: default;
        }

        /* Add Department Button */
        .btn-add-department {
            background-color: #0f172a;
            color: white;
            border: none;
            border-radius: 6px;
            padding: 8px 16px;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 6px;
        }

        .btn-add-department:hover {
            background-color: #1e293b;
        }

        /* Department Cards */
        .departments-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
            gap: 20px;
        }

        .department-card {
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.08);
            overflow: hidden;
            position: relative;
            height: 100%;
        }

        .department-content {
            padding: 20px;
            display: flex;
            flex-direction: column;
            height: 100%;
        }

        /* Department Header */
        .department-name {
            font-size: 22px;
            font-weight: 600;
            text-align: center;
            margin-bottom: 10px;
        }

        /* Manager Info */
        .manager-info {
            text-align: center;
            margin-bottom: 12px;
        }

        .manager-name {
            color: #6f42c1;
            font-weight: 500;
            display: inline-block;
            position: relative;
        }

        .manager-name:after {
            content: '';
            position: absolute;
            bottom: -2px;
            left: 0;
            width: 100%;
            height: 2px;
            background-color: #6f42c1;
            transform: scaleX(0);
            transition: transform 0.3s ease;
        }

        .manager-name:hover:after {
            transform: scaleX(1);
        }

        .no-manager {
            color: #6c757d;
            font-style: italic;
        }

        /* Employee Count */
        .employee-count {
            text-align: center;
            color: #6c757d;
            font-size: 14px;
            margin-bottom: 15px;
        }

        /* Department Description */
        .department-description {
            flex-grow: 1;
            font-size: 15px;
            color: #495057;
            margin-bottom: 20px;
        }

        /* Status Badge */
        .status-badge {
            position: absolute;
            top: 10px;
            right: 10px;
            padding: 4px 10px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: 500;
        }

        .active-badge {
            background-color: #10b981;
            color: white;
        }

        .inactive-badge {
            background-color: #6c757d;
            color: white;
        }

        /* Action Buttons */
        .department-actions {
            display: flex;
            gap: 10px;
        }

        .btn-action {
            flex: 1;
            padding: 8px 0;
            font-size: 14px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 6px;
            border-radius: 4px;
            transition: all 0.2s ease;
        }

        .btn-edit {
            background-color: #0f172a;
            color: white;
            border: none;
        }

        .btn-edit:hover {
            background-color: #1e293b;
        }

        .btn-delete {
            background-color: #0f172a;
            color: white;
            border: none;
        }

        .btn-delete:hover {
            background-color: #1e293b;
        }

        /* Employee List */
        .employee-list {
            margin-top: 15px;
            max-height: 200px;
            overflow-y: auto;
            border-top: 1px solid #eee;
            padding-top: 10px;
        }

        .employee-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 8px 0;
            border-bottom: 1px solid #f5f5f5;
        }

        .employee-name {
            font-weight: 500;
        }

        .employee-position {
            font-size: 12px;
            color: #6c757d;
        }
    </style>
}

<div class="content-wrapper">
    <div class="page-header">
        <h1 class="page-title">Department Management</h1>
        <a asp-page="EditDept" class="btn-add-department">
            <i class="bi bi-plus-circle"></i> Add Department
        </a>
    </div>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="departments-grid">
        @foreach (var department in Model.Departments)
        {
            <div class="department-card">
                <div class="status-badge @(department.Status == "Active" ? "active-badge" : "inactive-badge")">
                    @department.Status
                </div>
                <div class="department-content">
                    <h2 class="department-name">@department.Name</h2>
                    
                    <div class="manager-info">
                        @if (!string.IsNullOrEmpty(department.ManagerName))
                        {
                            <span class="manager-name">@department.ManagerName</span>
                        }
                        else
                        {
                            <span class="no-manager">No manager assigned</span>
                        }
                    </div>
                    
                    <div class="employee-count">
                        <i class="bi bi-people-fill"></i> 
                        @department.EmployeeCount @(department.EmployeeCount == 1 ? "Employee" : "Employees")
                    </div>

                    <p class="department-description">@department.Description</p>

                    <div class="department-actions">
                        <a asp-page="EditDept" asp-route-id="@department.DepartmentID" class="btn-action btn-edit">
                            <i class="bi bi-pencil"></i> Edit
                        </a>
                        <form method="post" asp-page-handler="Delete" style="flex: 1; display: flex;">
                            <input type="hidden" name="id" value="@department.DepartmentID" />
                            <button type="submit" class="btn-action btn-delete w-100"
                                    onclick="return confirm('Are you sure you want to delete this department?')">
                                <i class="bi bi-trash"></i> Delete
                            </button>
                        </form>
                    </div>

                    <!-- Collapsible Employee List - Hidden by default -->
                    <div class="employee-list" id="employees-@department.DepartmentID" style="display: none;">
                        @if (Model.DepartmentEmployees.Any(e => e.DepartmentID == department.DepartmentID))
                        {
                            @foreach (var employee in Model.DepartmentEmployees.Where(e => e.DepartmentID == department.DepartmentID))
                            {
                                <div class="employee-item">
                                    <div>
                                        <div class="employee-name">@employee.FirstName @employee.LastName</div>
                                        <div class="employee-position">@employee.Position</div>
                                    </div>
                                    @if (employee.IsManager)
                                    {
                                        <span class="badge bg-purple">Manager</span>
                                    }
                                </div>
                            }
                        }
                        else
                        {
                            <p class="text-muted">No employees in this department</p>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        // Enable tooltips
        document.addEventListener('DOMContentLoaded', function() {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            });
            
            // Toggle employee list when clicking on employee count
            document.querySelectorAll('.employee-count').forEach(element => {
                element.addEventListener('click', function() {
                    const departmentId = this.closest('.department-card').querySelector('form input[name="id"]').value;
                    const employeeList = document.getElementById('employees-' + departmentId);
                    if (employeeList) {
                        employeeList.style.display = employeeList.style.display === 'none' ? 'block' : 'none';
                    }
                });
            });
        });
    </script>
}