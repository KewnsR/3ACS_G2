@page
@model DepartmentsModel
@{
    ViewData["Title"] = "Departments";
    Layout = "_Layout";
}

@section Styles {
    <style>
        .scrollable-container {
            position: absolute;
            left: 256px;
            top: 0;
            width: calc(100% - 256px);
            height: 100vh;
            overflow-y: auto;
            padding: 20px;
            box-sizing: border-box;
        }

            .scrollable-container::-webkit-scrollbar {
                width: 8px;
            }

            .scrollable-container::-webkit-scrollbar-thumb {
                background-color: #0d6efd;
                border-radius: 4px;
            }

            .scrollable-container::-webkit-scrollbar-track {
                background-color: #f8f9fa;
            }

        .department-card {
            transition: transform 0.3s;
            height: 100%;
        }

            .department-card:hover {
                transform: translateY(-5px);
            }

            .department-card .card-body {
                display: flex;
                flex-direction: column;
            }

        .department-actions {
            margin-top: auto;
            display: flex;
            gap: 0.5rem;
        }

        .employee-badge {
            cursor: pointer;
        }

        .manager-badge {
            background-color: #6f42c1;
        }

        .employee-list {
            max-height: 300px;
            overflow-y: auto;
            margin-top: 10px;
        }
    </style>
}

<div class="scrollable-container">
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="h2">Department Management</h1>
        <div class="btn-toolbar mb-2 mb-md-0">
            <a asp-page="EditDept" class="btn btn-primary">
                <i class="bi bi-plus-circle me-1"></i> Add Department
            </a>
        </div>
    </div>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        @foreach (var department in Model.Departments)
        {
            <div class="col">
                <div class="card department-card shadow-sm">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start">
                            <div>
                                <h5 class="card-title">@department.Name</h5>
                                <h6 class="card-subtitle mb-2 text-muted">
                                    <span class="employee-badge"
                                          data-bs-toggle="collapse"
                                          data-bs-target="#employees-@department.DepartmentID">
                                        @department.EmployeeCount Employees
                                    </span>
                                    @if (!string.IsNullOrEmpty(department.ManagerName))
                                    {
                                        <span class="badge manager-badge"
                                              data-bs-toggle="tooltip"
                                              title="Department Manager">
                                            @department.ManagerName
                                        </span>
                                    }
                                </h6>
                            </div>
                            <span class="badge @department.StatusClass">@department.Status</span>
                        </div>
                        <p class="card-text mt-2">@department.Description</p>

                        <!-- Collapsible Employee List -->
                        <div class="collapse" id="employees-@department.DepartmentID">
                            <div class="employee-list">
                                @if (Model.DepartmentEmployees.Any(e => e.DepartmentID == department.DepartmentID))
                                {
                                    <ul class="list-group list-group-flush">
                                        @foreach (var employee in Model.DepartmentEmployees.Where(e => e.DepartmentID == department.DepartmentID))
                                        {
                                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                                <div>
                                                    @employee.FirstName @employee.LastName
                                                    <small class="text-muted d-block">@employee.Position</small>
                                                </div>
                                                @if (employee.IsManager)
                                                {
                                                    <span class="badge manager-badge">Manager</span>
                                                }
                                                else
                                                {
                                                    <button class="btn btn-sm btn-outline-primary assign-manager-btn"
                                                            data-employee-id="@employee.EmployeeID"
                                                            data-department-id="@department.DepartmentID">
                                                        <i class="bi bi-person-check"></i> Assign
                                                    </button>
                                                }
                                            </li>
                                        }
                                    </ul>
                                }
                                else
                                {
                                    <p class="text-muted">No employees in this department</p>
                                }
                            </div>
                        </div>

                        <div class="department-actions">
                            <a asp-page="EditDept" asp-route-id="@department.DepartmentID" class="btn btn-sm btn-outline-primary">
                                <i class="bi bi-pencil"></i> Edit
                            </a>
                            <form method="post" asp-page-handler="Delete" style="display: inline;">
                                <input type="hidden" name="id" value="@department.DepartmentID" />
                                <button type="submit" class="btn btn-sm btn-outline-danger"
                                        onclick="return confirm('Are you sure you want to delete this department?')">
                                    <i class="bi bi-trash"></i> Delete
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        // Initialize tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        });

        // Assign manager functionality
        document.querySelectorAll('.assign-manager-btn').forEach(button => {
            button.addEventListener('click', function() {
                const employeeId = this.getAttribute('data-employee-id');
                const departmentId = this.getAttribute('data-department-id');

                if (confirm('Are you sure you want to assign this employee as department manager?')) {
                    // Create form to submit
                    const form = document.createElement('form');
                    form.method = 'post';
                    form.action = '?handler=AssignManager';

                    // Add CSRF token
                    const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
                    const tokenInput = document.createElement('input');
                    tokenInput.type = 'hidden';
                    tokenInput.name = '__RequestVerificationToken';
                    tokenInput.value = token;
                    form.appendChild(tokenInput);

                    // Add department ID
                    const deptInput = document.createElement('input');
                    deptInput.type = 'hidden';
                    deptInput.name = 'SelectedDepartmentId';
                    deptInput.value = departmentId;
                    form.appendChild(deptInput);

                    // Add manager ID
                    const mgrInput = document.createElement('input');
                    mgrInput.type = 'hidden';
                    mgrInput.name = 'SelectedManagerId';
                    mgrInput.value = employeeId;
                    form.appendChild(mgrInput);

                    // Submit form
                    document.body.appendChild(form);
                    form.submit();
                }
            });
        });

        // Initialize employee list collapse toggles
        document.querySelectorAll('.employee-badge').forEach(badge => {
            badge.addEventListener('click', function(e) {
                // Prevent collapse if clicking on a tooltip
                if (e.target.closest('[data-bs-toggle="tooltip"]')) {
                    e.stopPropagation();
                }
            });
        });
    </script>
}